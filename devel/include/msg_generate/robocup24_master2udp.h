// Generated by gencpp from file msg_generate/robocup24_master2udp.msg
// DO NOT EDIT!


#ifndef MSG_GENERATE_MESSAGE_ROBOCUP24_MASTER2UDP_H
#define MSG_GENERATE_MESSAGE_ROBOCUP24_MASTER2UDP_H


#include <string>
#include <vector>
#include <memory>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace msg_generate
{
template <class ContainerAllocator>
struct robocup24_master2udp_
{
  typedef robocup24_master2udp_<ContainerAllocator> Type;

  robocup24_master2udp_()
    : robot_num(0)
    , robot_state(0)
    , robot_coor_x(0)
    , robot_coor_y(0)
    , roboy_imu_yaw(0)
    , ball_dist(0)
    , ball_coor_x(0)
    , ball_coor_y(0)
    , myTeam(0)  {
    }
  robocup24_master2udp_(const ContainerAllocator& _alloc)
    : robot_num(0)
    , robot_state(0)
    , robot_coor_x(0)
    , robot_coor_y(0)
    , roboy_imu_yaw(0)
    , ball_dist(0)
    , ball_coor_x(0)
    , ball_coor_y(0)
    , myTeam(0)  {
  (void)_alloc;
    }



   typedef int64_t _robot_num_type;
  _robot_num_type robot_num;

   typedef int64_t _robot_state_type;
  _robot_state_type robot_state;

   typedef int64_t _robot_coor_x_type;
  _robot_coor_x_type robot_coor_x;

   typedef int64_t _robot_coor_y_type;
  _robot_coor_y_type robot_coor_y;

   typedef int64_t _roboy_imu_yaw_type;
  _roboy_imu_yaw_type roboy_imu_yaw;

   typedef int64_t _ball_dist_type;
  _ball_dist_type ball_dist;

   typedef int64_t _ball_coor_x_type;
  _ball_coor_x_type ball_coor_x;

   typedef int64_t _ball_coor_y_type;
  _ball_coor_y_type ball_coor_y;

   typedef int64_t _myTeam_type;
  _myTeam_type myTeam;





  typedef boost::shared_ptr< ::msg_generate::robocup24_master2udp_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::msg_generate::robocup24_master2udp_<ContainerAllocator> const> ConstPtr;

}; // struct robocup24_master2udp_

typedef ::msg_generate::robocup24_master2udp_<std::allocator<void> > robocup24_master2udp;

typedef boost::shared_ptr< ::msg_generate::robocup24_master2udp > robocup24_master2udpPtr;
typedef boost::shared_ptr< ::msg_generate::robocup24_master2udp const> robocup24_master2udpConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::msg_generate::robocup24_master2udp_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::msg_generate::robocup24_master2udp_<ContainerAllocator> >::stream(s, "", v);
return s;
}


template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator==(const ::msg_generate::robocup24_master2udp_<ContainerAllocator1> & lhs, const ::msg_generate::robocup24_master2udp_<ContainerAllocator2> & rhs)
{
  return lhs.robot_num == rhs.robot_num &&
    lhs.robot_state == rhs.robot_state &&
    lhs.robot_coor_x == rhs.robot_coor_x &&
    lhs.robot_coor_y == rhs.robot_coor_y &&
    lhs.roboy_imu_yaw == rhs.roboy_imu_yaw &&
    lhs.ball_dist == rhs.ball_dist &&
    lhs.ball_coor_x == rhs.ball_coor_x &&
    lhs.ball_coor_y == rhs.ball_coor_y &&
    lhs.myTeam == rhs.myTeam;
}

template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator!=(const ::msg_generate::robocup24_master2udp_<ContainerAllocator1> & lhs, const ::msg_generate::robocup24_master2udp_<ContainerAllocator2> & rhs)
{
  return !(lhs == rhs);
}


} // namespace msg_generate

namespace ros
{
namespace message_traits
{





template <class ContainerAllocator>
struct IsFixedSize< ::msg_generate::robocup24_master2udp_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::msg_generate::robocup24_master2udp_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::msg_generate::robocup24_master2udp_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::msg_generate::robocup24_master2udp_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::msg_generate::robocup24_master2udp_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::msg_generate::robocup24_master2udp_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::msg_generate::robocup24_master2udp_<ContainerAllocator> >
{
  static const char* value()
  {
    return "c362ddeab15e7aaf6c2da6140bdfe915";
  }

  static const char* value(const ::msg_generate::robocup24_master2udp_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xc362ddeab15e7aafULL;
  static const uint64_t static_value2 = 0x6c2da6140bdfe915ULL;
};

template<class ContainerAllocator>
struct DataType< ::msg_generate::robocup24_master2udp_<ContainerAllocator> >
{
  static const char* value()
  {
    return "msg_generate/robocup24_master2udp";
  }

  static const char* value(const ::msg_generate::robocup24_master2udp_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::msg_generate::robocup24_master2udp_<ContainerAllocator> >
{
  static const char* value()
  {
    return "int64 robot_num\n"
"int64 robot_state\n"
"int64 robot_coor_x\n"
"int64 robot_coor_y\n"
"int64 roboy_imu_yaw\n"
"int64 ball_dist\n"
"int64 ball_coor_x\n"
"int64 ball_coor_y\n"
"int64 myTeam\n"
;
  }

  static const char* value(const ::msg_generate::robocup24_master2udp_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::msg_generate::robocup24_master2udp_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.robot_num);
      stream.next(m.robot_state);
      stream.next(m.robot_coor_x);
      stream.next(m.robot_coor_y);
      stream.next(m.roboy_imu_yaw);
      stream.next(m.ball_dist);
      stream.next(m.ball_coor_x);
      stream.next(m.ball_coor_y);
      stream.next(m.myTeam);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct robocup24_master2udp_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::msg_generate::robocup24_master2udp_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::msg_generate::robocup24_master2udp_<ContainerAllocator>& v)
  {
    s << indent << "robot_num: ";
    Printer<int64_t>::stream(s, indent + "  ", v.robot_num);
    s << indent << "robot_state: ";
    Printer<int64_t>::stream(s, indent + "  ", v.robot_state);
    s << indent << "robot_coor_x: ";
    Printer<int64_t>::stream(s, indent + "  ", v.robot_coor_x);
    s << indent << "robot_coor_y: ";
    Printer<int64_t>::stream(s, indent + "  ", v.robot_coor_y);
    s << indent << "roboy_imu_yaw: ";
    Printer<int64_t>::stream(s, indent + "  ", v.roboy_imu_yaw);
    s << indent << "ball_dist: ";
    Printer<int64_t>::stream(s, indent + "  ", v.ball_dist);
    s << indent << "ball_coor_x: ";
    Printer<int64_t>::stream(s, indent + "  ", v.ball_coor_x);
    s << indent << "ball_coor_y: ";
    Printer<int64_t>::stream(s, indent + "  ", v.ball_coor_y);
    s << indent << "myTeam: ";
    Printer<int64_t>::stream(s, indent + "  ", v.myTeam);
  }
};

} // namespace message_operations
} // namespace ros

#endif // MSG_GENERATE_MESSAGE_ROBOCUP24_MASTER2UDP_H
