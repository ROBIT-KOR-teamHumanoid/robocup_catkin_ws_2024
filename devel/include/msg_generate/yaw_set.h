// Generated by gencpp from file msg_generate/yaw_set.msg
// DO NOT EDIT!


#ifndef MSG_GENERATE_MESSAGE_YAW_SET_H
#define MSG_GENERATE_MESSAGE_YAW_SET_H


#include <string>
#include <vector>
#include <memory>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace msg_generate
{
template <class ContainerAllocator>
struct yaw_set_
{
  typedef yaw_set_<ContainerAllocator> Type;

  yaw_set_()
    : isYawSet(false)  {
    }
  yaw_set_(const ContainerAllocator& _alloc)
    : isYawSet(false)  {
  (void)_alloc;
    }



   typedef uint8_t _isYawSet_type;
  _isYawSet_type isYawSet;





  typedef boost::shared_ptr< ::msg_generate::yaw_set_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::msg_generate::yaw_set_<ContainerAllocator> const> ConstPtr;

}; // struct yaw_set_

typedef ::msg_generate::yaw_set_<std::allocator<void> > yaw_set;

typedef boost::shared_ptr< ::msg_generate::yaw_set > yaw_setPtr;
typedef boost::shared_ptr< ::msg_generate::yaw_set const> yaw_setConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::msg_generate::yaw_set_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::msg_generate::yaw_set_<ContainerAllocator> >::stream(s, "", v);
return s;
}


template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator==(const ::msg_generate::yaw_set_<ContainerAllocator1> & lhs, const ::msg_generate::yaw_set_<ContainerAllocator2> & rhs)
{
  return lhs.isYawSet == rhs.isYawSet;
}

template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator!=(const ::msg_generate::yaw_set_<ContainerAllocator1> & lhs, const ::msg_generate::yaw_set_<ContainerAllocator2> & rhs)
{
  return !(lhs == rhs);
}


} // namespace msg_generate

namespace ros
{
namespace message_traits
{





template <class ContainerAllocator>
struct IsFixedSize< ::msg_generate::yaw_set_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::msg_generate::yaw_set_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::msg_generate::yaw_set_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::msg_generate::yaw_set_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::msg_generate::yaw_set_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::msg_generate::yaw_set_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::msg_generate::yaw_set_<ContainerAllocator> >
{
  static const char* value()
  {
    return "dd1fd0ebc1d42598eb0e74fe046655f8";
  }

  static const char* value(const ::msg_generate::yaw_set_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xdd1fd0ebc1d42598ULL;
  static const uint64_t static_value2 = 0xeb0e74fe046655f8ULL;
};

template<class ContainerAllocator>
struct DataType< ::msg_generate::yaw_set_<ContainerAllocator> >
{
  static const char* value()
  {
    return "msg_generate/yaw_set";
  }

  static const char* value(const ::msg_generate::yaw_set_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::msg_generate::yaw_set_<ContainerAllocator> >
{
  static const char* value()
  {
    return "bool isYawSet\n"
;
  }

  static const char* value(const ::msg_generate::yaw_set_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::msg_generate::yaw_set_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.isYawSet);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct yaw_set_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::msg_generate::yaw_set_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::msg_generate::yaw_set_<ContainerAllocator>& v)
  {
    s << indent << "isYawSet: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.isYawSet);
  }
};

} // namespace message_operations
} // namespace ros

#endif // MSG_GENERATE_MESSAGE_YAW_SET_H
